export class TimerManager {
  constructor() {
    this.interval = 2000;
    this._volvoTimeElements = new Set();
  }

  static get Instance() {
    return this._instance || (this._instance = new this());
  }

  register(anotherTimeElement) {
    if (!this._volvoTimeElements.has(anotherTimeElement)) {
      this._volvoTimeElements.add(anotherTimeElement);

      if (this._volvoTimeElements.size === 1) {
        this._timerId = window.setInterval(() => this._update(), this.interval);
      }
    }
  }

  deregister(timeElement) {
    this._volvoTimeElements.forEach(nextTimeElement => {
      if (nextTimeElement === timeElement) {
        this._volvoTimeElements.delete(timeElement);
      }
    });

    if (this._volvoTimeElements.size === 0) {
      window.clearInterval(this._timerId);
    }
  }

  _update() {
    if (this._volvoTimeElements == null) {
      return;
    }

    if (this._volvoTimeElements.size === 0 && this._timerId > 0) {
      window.clearInterval(this._timerId);
    } else {
      this._volvoTimeElements.forEach(timeElement => {
        if (timeElement != null) {
          timeElement._format(timeElement.datetime, timeElement.locale, timeElement.localize);
        }
      });
    }
  }

} //# sourceMappingURL=TimerManager.js.map