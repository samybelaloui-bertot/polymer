import { VolvoLogEvent } from "./volvo-log-event.js";
export class Logger {
  constructor(target) {
    this.target = target;
  }

  info(message, details) {
    this.createAndDispatchEvent('info', message, details);
  }

  debug(message, details) {
    this.createAndDispatchEvent('debug', message, details);
  }

  warning(message, details, error) {
    this.createAndDispatchEvent('warn', message, details, error);
  }

  error(message, details, error) {
    this.createAndDispatchEvent('error', message, details, error);
  }

  createAndDispatchEvent(level, message, details, error) {
    let eventTarget = this.target;

    if (!('dispatchEvent' in this.target)) {
      eventTarget = document;
    }

    eventTarget.dispatchEvent(new VolvoLogEvent({
      bubbles: true,
      composed: true,
      detail: {
        message,
        level,
        error,
        details,
        timestamp: Math.round(Date.now() / 1000).toString()
      }
    }));
  }

} //# sourceMappingURL=Logger.js.map